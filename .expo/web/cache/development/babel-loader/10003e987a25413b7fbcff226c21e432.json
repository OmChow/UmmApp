{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useEffect, useState } from 'react';\nimport { containerFull, searchbar } from \"../../CommonCss/pagecss\";\nimport { formHead, formHead2 } from \"../../CommonCss/formcss\";\nimport Bottomnavbar from \"../../Components/Bottomnavbar\";\nimport TopNavbar from \"../../Components/TopNavbar\";\nimport FollowersRandomPost from \"../../Components/FollowersRandomPost\";\nimport UserCard from \"../../Cards/UserCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchUserPage = function SearchUserPage(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    keyword = _useState2[0],\n    setKeyword = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    data = _useState6[0],\n    setData = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var getallusers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (keyword.length > 0) {\n        setLoading(true);\n        fetch('http://10.0.2.2:3000/searchuser', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            keyword: keyword\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          if (data.error) {\n            setData([]);\n            setError(data.error);\n            setLoading(false);\n          } else if (data.message == 'User Found') {\n            setError(null);\n            setData(data.user);\n            setLoading(false);\n          }\n        }).catch(function (err) {\n          setData([]);\n          setLoading(false);\n        });\n      } else {\n        setData([]);\n        setError(null);\n      }\n    });\n    return function getallusers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getallusers();\n  }, [keyword]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {}), _jsx(TopNavbar, {\n      navigation: navigation\n    }), _jsx(Bottomnavbar, {\n      navigation: navigation,\n      page: \"SearchUserPage\"\n    }), _jsx(TextInput, {\n      placeholder: \"Search By Username..\",\n      style: searchbar,\n      onChangeText: function onChangeText(text) {\n        setKeyword(text);\n      }\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"white\"\n    }) : _jsx(_Fragment, {\n      children: error ? _jsx(Text, {\n        style: formHead2,\n        children: error\n      }) : _jsx(ScrollView, {\n        style: styles.userlists,\n        children: data.map(function (item, index) {\n          return _jsx(UserCard, {\n            user: item,\n            navigation: navigation\n          }, item.username);\n        })\n      })\n    })]\n  });\n};\nexport default SearchUserPage;\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'black',\n    paddingVertical: 50\n  },\n  userlists: {\n    width: '100%',\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","containerFull","searchbar","formHead","formHead2","Bottomnavbar","TopNavbar","FollowersRandomPost","UserCard","SearchUserPage","navigation","keyword","setKeyword","loading","setLoading","data","setData","error","setError","getallusers","length","fetch","method","headers","body","JSON","stringify","then","res","json","message","user","catch","err","styles","container","text","userlists","map","item","index","username","StyleSheet","create","width","height","backgroundColor","paddingVertical","marginTop"],"sources":["/Users/supriyomal/Desktop/Untitled/SRC/Screens/Mainpage/SearchUserPage.js"],"sourcesContent":["import { StyleSheet, Text, View, StatusBar, TextInput, ScrollView, ActivityIndicator } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport { containerFull, searchbar } from '../../CommonCss/pagecss'\nimport { formHead, formHead2 } from '../../CommonCss/formcss'\nimport Bottomnavbar from '../../Components/Bottomnavbar'\nimport TopNavbar from '../../Components/TopNavbar'\nimport FollowersRandomPost from '../../Components/FollowersRandomPost'\nimport UserCard from '../../Cards/UserCard'\n\nconst SearchUserPage = ({ navigation }) => {\n\n\n    const [keyword, setKeyword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(null)\n\n    const getallusers = async () => {\n        if (keyword.length > 0) {\n            setLoading(true)\n            fetch('http://10.0.2.2:3000/searchuser', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ keyword: keyword })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    // console.log(data)\n                    if (data.error) {\n                        setData([])\n                        setError(data.error)\n                        setLoading(false)\n                    }\n                    else if (data.message == 'User Found') {\n                        setError(null)\n                        setData(data.user)\n                        setLoading(false)\n                    }\n                })\n                .catch(err => {\n                    setData([])\n                    setLoading(false)\n                })\n        }\n        else {\n            setData([])\n            setError(null)\n        }\n    }\n\n    useEffect(() => {\n        getallusers()\n    }, [keyword])\n    return (\n        <View style={styles.container}>\n            <StatusBar />\n            <TopNavbar navigation={navigation} />\n            <Bottomnavbar navigation={navigation} page={\"SearchUserPage\"} />\n\n            <TextInput placeholder=\"Search By Username..\" style={searchbar}\n                onChangeText={(text) => {\n                    setKeyword(text)\n                }}\n            />\n\n            {\n                loading ?\n                    <ActivityIndicator size=\"large\" color=\"white\" />\n                    :\n                    <>\n                        {\n                            error ?\n                                <Text style={formHead2}>{error}</Text>\n                                :\n\n                                <ScrollView style={styles.userlists}>\n                                    {\n                                        data.map((item, index) => {\n                                            return <UserCard key={item.username} user={item}\n                                                navigation={navigation}\n                                            />\n                                        })\n                                    }\n                                </ScrollView>\n                        }\n                    </>\n            }\n        </View>\n    )\n}\n\nexport default SearchUserPage\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'black',\n        paddingVertical: 50,\n    },\n    userlists: {\n        width: '100%',\n        marginTop: 20,\n    }\n\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}