{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState } from 'react';\nimport { containerFull, goback, hr80, logo1 } from \"../../../CommonCss/pagecss\";\nimport logo from \"../../../../assets/logo.png\";\nimport { formbtn, formHead, formHead2, formHead3, formInput, formTextLinkCenter, formTextLinkRight } from \"../../../CommonCss/formcss\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPassword_ChoosePassword = function ForgotPassword_ChoosePassword(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var email = route.params.email;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setpassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmpassword = _useState4[0],\n    setconfirmpassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handlePasswordChange = function handlePasswordChange() {\n    if (password == '' || confirmpassword == '') {\n      alert('Please enter password');\n    } else if (password != confirmpassword) {\n      alert('Password does not match');\n    } else {\n      setLoading(true);\n      fetch('http://10.0.2.2:3000/resetpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.message === \"Password Changed Successfully\") {\n          setLoading(false);\n          alert(data.message);\n          navigation.navigate('ForgotPassword_AccountRecovered');\n        } else {\n          setLoading(false);\n          alert(\"Something went wrong\");\n        }\n      }).catch(function (err) {\n        setLoading(false);\n        alert(err);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: containerFull,\n    children: [_jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      style: goback,\n      children: [_jsx(MaterialIcons, {\n        name: \"arrow-back-ios\",\n        size: 24,\n        color: \"gray\"\n      }), _jsx(Text, {\n        style: {\n          color: 'gray',\n          fontSize: 16\n        },\n        children: \"Go Back\"\n      })]\n    }), _jsx(Image, {\n      source: logo,\n      style: logo1\n    }), _jsx(Text, {\n      style: formHead2,\n      children: \"Choose a strong password\"\n    }), _jsx(TextInput, {\n      placeholder: \"Enter password\",\n      style: formInput,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setpassword(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Confirm password\",\n      style: formInput,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setconfirmpassword(text);\n      }\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"white\"\n    }) : _jsx(Text, {\n      style: formbtn,\n      onPress: function onPress() {\n        return handlePasswordChange();\n      },\n      children: \"Next\"\n    })]\n  });\n};\nexport default ForgotPassword_ChoosePassword;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","containerFull","goback","hr80","logo1","logo","formbtn","formHead","formHead2","formHead3","formInput","formTextLinkCenter","formTextLinkRight","MaterialIcons","ForgotPassword_ChoosePassword","navigation","route","email","params","password","setpassword","confirmpassword","setconfirmpassword","loading","setLoading","handlePasswordChange","alert","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","navigate","catch","err","color","fontSize","text","styles","StyleSheet","create"],"sources":["/Users/supriyomal/Desktop/Untitled/SRC/Screens/LoginSignup/ForgotPassword/ForgotPassword_ChoosePassword.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, ActivityIndicator } from 'react-native'\nimport React, { useState } from 'react'\nimport { containerFull, goback, hr80, logo1 } from '../../../CommonCss/pagecss'\nimport logo from '../../../../assets/logo.png'\nimport { formbtn, formHead, formHead2, formHead3, formInput, formTextLinkCenter, formTextLinkRight } from '../../../CommonCss/formcss'\nimport { MaterialIcons } from '@expo/vector-icons';\nconst ForgotPassword_ChoosePassword = ({ navigation, route }) => {\n    const { email } = route.params;\n    const [password, setpassword] = useState('')\n    const [confirmpassword, setconfirmpassword] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    const handlePasswordChange = () => {\n        if (password == '' || confirmpassword == '') {\n            alert('Please enter password')\n        } else if (password != confirmpassword) {\n            alert('Password does not match')\n        }\n\n        else {\n            setLoading(true);\n            fetch('http://10.0.2.2:3000/resetpassword', {\n\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email: email, password: password })\n            })\n                .then(res => res.json()).then(\n                    data => {\n                        if (data.message === \"Password Changed Successfully\") {\n                            setLoading(false)\n                            alert(data.message);\n                            navigation.navigate('ForgotPassword_AccountRecovered')\n                        }\n                        else {\n                            setLoading(false)\n                            alert(\"Something went wrong\");\n                        }\n                    })\n                .catch(err => {\n                    setLoading(false);\n                    alert(err)\n                })\n        }\n\n        // navigation.navigate('ForgotPassword_AccountRecovered')\n    }\n    return (\n        <View style={containerFull}>\n            <TouchableOpacity onPress={() => navigation.navigate('Login')} style={goback}>\n\n                <MaterialIcons name=\"arrow-back-ios\" size={24} color=\"gray\" />\n                <Text style={{\n                    color: 'gray',\n                    fontSize: 16,\n                }}\n\n                >Go Back</Text>\n\n            </TouchableOpacity>\n\n            <Image source={logo} style={logo1} />\n            <Text style={formHead2}>Choose a strong password</Text>\n            <TextInput placeholder=\"Enter password\" style={formInput} secureTextEntry\n                onChangeText={(text) => setpassword(text)}\n            />\n            <TextInput placeholder=\"Confirm password\" style={formInput} secureTextEntry\n                onChangeText={(text) => setconfirmpassword(text)}\n            />\n            {\n                loading ? <ActivityIndicator size=\"large\" color=\"white\" /> :\n                    <Text style={formbtn}\n                        onPress={() => handlePasswordChange()}\n                    >\n                        Next\n                    </Text>\n            }\n\n        </View>\n    )\n}\n\n\n\nexport default ForgotPassword_ChoosePassword\n\nconst styles = StyleSheet.create({})"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK;AAC3C,OAAOC,IAAI;AACX,SAASC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,iBAAiB;AAClG,SAASC,aAAa,QAAQ,oBAAoB;AAAC;AAAA;AACnD,IAAMC,6BAA6B,GAAG,SAAhCA,6BAA6B,OAA8B;EAAA,IAAxBC,UAAU,QAAVA,UAAU;IAAEC,KAAK,QAALA,KAAK;EACtD,IAAQC,KAAK,GAAKD,KAAK,CAACE,MAAM,CAAtBD,KAAK;EACb,gBAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCmB,QAAQ;IAAEC,WAAW;EAC5B,iBAA8CpB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDqB,eAAe;IAAEC,kBAAkB;EAC1C,iBAA8BtB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCuB,OAAO;IAAEC,UAAU;EAG1B,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;IAC/B,IAAIN,QAAQ,IAAI,EAAE,IAAIE,eAAe,IAAI,EAAE,EAAE;MACzCK,KAAK,CAAC,uBAAuB,CAAC;IAClC,CAAC,MAAM,IAAIP,QAAQ,IAAIE,eAAe,EAAE;MACpCK,KAAK,CAAC,yBAAyB,CAAC;IACpC,CAAC,MAEI;MACDF,UAAU,CAAC,IAAI,CAAC;MAChBG,KAAK,CAAC,oCAAoC,EAAE;QAExCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,KAAK,EAAEA,KAAK;UAAEE,QAAQ,EAAEA;QAAS,CAAC;MAC7D,CAAC,CAAC,CACGc,IAAI,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;MAAA,EAAC,CAACF,IAAI,CACzB,UAAAG,IAAI,EAAI;QACJ,IAAIA,IAAI,CAACC,OAAO,KAAK,+BAA+B,EAAE;UAClDb,UAAU,CAAC,KAAK,CAAC;UACjBE,KAAK,CAACU,IAAI,CAACC,OAAO,CAAC;UACnBtB,UAAU,CAACuB,QAAQ,CAAC,iCAAiC,CAAC;QAC1D,CAAC,MACI;UACDd,UAAU,CAAC,KAAK,CAAC;UACjBE,KAAK,CAAC,sBAAsB,CAAC;QACjC;MACJ,CAAC,CAAC,CACLa,KAAK,CAAC,UAAAC,GAAG,EAAI;QACVhB,UAAU,CAAC,KAAK,CAAC;QACjBE,KAAK,CAACc,GAAG,CAAC;MACd,CAAC,CAAC;IACV;EAGJ,CAAC;EACD,OACI,MAAC,IAAI;IAAC,KAAK,EAAEvC,aAAc;IAAA,WACvB,MAAC,gBAAgB;MAAC,OAAO,EAAE;QAAA,OAAMc,UAAU,CAACuB,QAAQ,CAAC,OAAO,CAAC;MAAA,CAAC;MAAC,KAAK,EAAEpC,MAAO;MAAA,WAEzE,KAAC,aAAa;QAAC,IAAI,EAAC,gBAAgB;QAAC,IAAI,EAAE,EAAG;QAAC,KAAK,EAAC;MAAM,EAAG,EAC9D,KAAC,IAAI;QAAC,KAAK,EAAE;UACTuC,KAAK,EAAE,MAAM;UACbC,QAAQ,EAAE;QACd,CAAE;QAAA,UAED;MAAO,EAAO;IAAA,EAEA,EAEnB,KAAC,KAAK;MAAC,MAAM,EAAErC,IAAK;MAAC,KAAK,EAAED;IAAM,EAAG,EACrC,KAAC,IAAI;MAAC,KAAK,EAAEI,SAAU;MAAA,UAAC;IAAwB,EAAO,EACvD,KAAC,SAAS;MAAC,WAAW,EAAC,gBAAgB;MAAC,KAAK,EAAEE,SAAU;MAAC,eAAe;MACrE,YAAY,EAAE,sBAACiC,IAAI;QAAA,OAAKvB,WAAW,CAACuB,IAAI,CAAC;MAAA;IAAC,EAC5C,EACF,KAAC,SAAS;MAAC,WAAW,EAAC,kBAAkB;MAAC,KAAK,EAAEjC,SAAU;MAAC,eAAe;MACvE,YAAY,EAAE,sBAACiC,IAAI;QAAA,OAAKrB,kBAAkB,CAACqB,IAAI,CAAC;MAAA;IAAC,EACnD,EAEEpB,OAAO,GAAG,KAAC,iBAAiB;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAC;IAAO,EAAG,GACtD,KAAC,IAAI;MAAC,KAAK,EAAEjB,OAAQ;MACjB,OAAO,EAAE;QAAA,OAAMmB,oBAAoB,EAAE;MAAA,CAAC;MAAA,UACzC;IAED,EAAO;EAAA,EAGZ;AAEf,CAAC;AAID,eAAeX,6BAA6B;AAE5C,IAAM8B,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}