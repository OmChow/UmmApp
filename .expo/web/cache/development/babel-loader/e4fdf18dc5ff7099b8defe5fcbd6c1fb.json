{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { formHead2 } from \"../../CommonCss/Formcss\";\nimport ChatCard from \"../../Cards/ChatCard\";\nimport { searchbar } from \"../../CommonCss/pagecss\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar All_Chats = function All_Chats(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    chats = _useState2[0],\n    setChats = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    keyword = _useState4[0],\n    setKeyword = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userdata = _useState6[0],\n    setUserdata = _useState6[1];\n  useEffect(function () {\n    loadchats();\n  }, []);\n  var loadchats = function loadchats() {\n    AsyncStorage.getItem('user').then(function (data) {\n      setUserdata(JSON.parse(data));\n      var userid = JSON.parse(data).user._id;\n      fetch('http://10.0.2.2:3000/getusermessages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid: userid\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          if (a.date > b.date) {\n            return -1;\n          }\n        });\n        setChats(data);\n      }).catch(function (err) {\n        alert('Something went wrong');\n        setChats([]);\n      });\n    }).catch(function (err) {\n      return alert(err);\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Ionicons, {\n      name: \"chevron-back-circle\",\n      size: 24,\n      color: \"white\",\n      style: styles.gohomeicon,\n      onPress: function onPress() {\n        return navigation.navigate('MainPage');\n      }\n    }), _jsxs(View, {\n      style: styles.c1,\n      children: [_jsx(Text, {\n        style: formHead2,\n        children: \"Your Chats\"\n      }), _jsx(TextInput, {\n        style: searchbar,\n        placeholder: \"Search\",\n        onChangeText: function onChangeText(text) {\n          return setKeyword(text);\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.c2,\n      children: chats !== null && chats.filter(function (chat) {\n        if (keyword == '') {\n          return chat;\n        } else if (chat.username.toLowerCase().includes(keyword.toLowerCase()) || chat.lastmessage.toLowerCase().includes(keyword.toLowerCase())) {\n          return chat;\n        }\n      }).map(function (chat) {\n        return _jsx(ChatCard, {\n          chat: chat,\n          navigation: navigation\n        }, chat.fuserid);\n      })\n    })]\n  });\n};\nexport default All_Chats;\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#5539FF'\n  },\n  gohomeicon: {\n    position: 'absolute',\n    top: 15,\n    left: 20,\n    zIndex: 10,\n    color: 'white',\n    fontSize: 30\n  },\n  c1: {\n    width: '95%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 30,\n    backgroundColor: '##5539FF',\n    alignSelf: 'center',\n    borderRadius: 20,\n    borderColor: '#5539FF',\n    borderWidth: 1\n  },\n  searchbar: {\n    width: '90%',\n    backgroundColor: 'white',\n    borderRadius: 30,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginTop: 10,\n    fontSize: 18\n  },\n  c2: {\n    width: '100%',\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Ionicons","formHead2","ChatCard","searchbar","AsyncStorage","All_Chats","navigation","chats","setChats","keyword","setKeyword","userdata","setUserdata","loadchats","getItem","then","data","JSON","parse","userid","user","_id","fetch","method","headers","body","stringify","res","json","sort","a","b","date","catch","err","alert","styles","container","gohomeicon","navigate","c1","text","c2","filter","chat","username","toLowerCase","includes","lastmessage","map","fuserid","StyleSheet","create","width","height","backgroundColor","position","top","left","zIndex","color","fontSize","flexDirection","alignItems","justifyContent","paddingVertical","alignSelf","borderRadius","borderColor","borderWidth","paddingHorizontal","marginTop","padding"],"sources":["/Users/supriyomal/Desktop/Umm/App/SRC/Screens/ChatSection/All_Chats.js"],"sourcesContent":["import { ScrollView, StyleSheet, Text, TextInput, View } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport { Ionicons } from '@expo/vector-icons';\nimport { formHead2 } from '../../CommonCss/Formcss';\nimport ChatCard from '../../Cards/ChatCard';\nimport { searchbar } from '../../CommonCss/pagecss';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst All_Chats = ({ navigation }) => {\n    // let chats = [\n    //     {\n    //         roomid: \"6353f0c6a52cde6dafae64d2634c1d60f09a4f3ff40be517\",\n    //         fuserid: \"634c224bc4fbf37da83c5efa\",\n    //         lastmessage: \"This is the third message\",\n    //         ouruserid: \"634c1d60f09a4f3ff40be517\"\n    //     }\n    // ]\n\n    const [chats, setChats] = useState(null)\n\n    const [keyword, setKeyword] = useState('')\n\n    // console.log(keyword)\n\n    const [userdata, setUserdata] = useState(null)\n    useEffect(() => {\n        loadchats()\n    }, [])\n    const loadchats = () => {\n        AsyncStorage.getItem('user')\n            .then(data => {\n                // console.log('async userdata ', data)\n                setUserdata(JSON.parse(data))\n                let userid = JSON.parse(data).user._id;\n                // console.log(userid)\n\n                fetch('http://10.0.2.2:3000/getusermessages', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        userid: userid\n                    })\n                })\n                    .then(res => res.json())\n                    .then(data => {\n                        // console.log(data)\n                        data.sort((a, b) => {\n                            if(a.date > b.date){\n                                return -1\n                            }\n                        })\n                        setChats(data)\n                    })\n                    .catch(err => {\n                        alert('Something went wrong')\n                        setChats([])\n                    })\n            })\n            .catch(err => alert(err))\n    }\n    return (\n        <ScrollView style={styles.container}>\n            <Ionicons name=\"chevron-back-circle\" size={24} color=\"white\" style={styles.gohomeicon}\n\n                onPress={() => navigation.navigate('MainPage')}\n            />\n\n            <View style={styles.c1}>\n                <Text style={formHead2}>Your Chats</Text>\n                <TextInput style={searchbar} placeholder=\"Search\"\n\n                    onChangeText={(text) => setKeyword(text)}\n                />\n            </View>\n\n            <View style={styles.c2}>\n                {\n                    chats!==null && chats.filter(\n                        (chat) => {\n                            if (keyword == '') {\n                                return chat\n                            }\n                            else if (\n                                chat.username.toLowerCase().includes(keyword.toLowerCase())\n                                ||\n                                chat.lastmessage.toLowerCase().includes(keyword.toLowerCase())\n                            ) {\n                                return chat\n                            }\n                        }\n                    ).map((chat) => {\n                        return <ChatCard key={chat.fuserid} chat={chat} navigation={navigation}/>\n                    })\n                }\n            </View>\n        </ScrollView>\n    )\n}\n\nexport default All_Chats\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#5539FF',\n    },\n    gohomeicon: {\n        position: 'absolute',\n        top: 15,\n        left: 20,\n        zIndex: 10,\n        color: 'white',\n        fontSize: 30,\n    },\n    c1: {\n        width: '95%',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 30,\n        backgroundColor: '##5539FF',\n        alignSelf: 'center',\n        borderRadius: 20,\n        borderColor: '#5539FF',\n        borderWidth: 1,\n    },\n    searchbar: {\n        width: '90%',\n        backgroundColor: 'white',\n        borderRadius: 30,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginTop: 10,\n        fontSize: 18,\n    },\n    c2: {\n        width: '100%',\n        padding: 10,\n    }\n\n})\n\n\n\n// fetch('http://10.0.2.2:3000/setusermessages', {\n//     method: 'POST',\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({\n//         ouruserid: userid,\n//         fuserid: fuserid,\n//         roomid: roomid,\n//         lastmessage: currentmessage\n//     })\n// })\n//     .then(res => res.json())\n//     .then(data => {\n//         if (data.message == 'Message saved successfully') {\n//             console.log('user messages updated')\n//         }\n//         else {\n//             console.log('user messages not updated')\n//         }\n//     })\n//     .catch(err => {\n//         console.log('error in setusermessages route = ',err)\n//     })"],"mappings":"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"},"metadata":{},"sourceType":"module"}