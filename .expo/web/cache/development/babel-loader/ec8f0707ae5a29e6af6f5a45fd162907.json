{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState } from 'react';\nimport { containerFull, goback, hr80, logo1 } from \"../../CommonCss/pagecss\";\nimport logo from \"../../../assets/logo.png\";\nimport { formbtn, formHead, formHead2, formHead3, formInput, formTextLinkCenter, formTextLinkRight } from \"../../CommonCss/formcss\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChangePassword = function ChangePassword(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    oldpassword = _useState2[0],\n    setOldpassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newpassword = _useState4[0],\n    setNewpassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmnewpassword = _useState6[0],\n    setConfirmNewpassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var handlePasswordChange = function handlePasswordChange() {\n    if (oldpassword === '' || newpassword === '' || confirmnewpassword === '') {\n      alert('Please fill all the fields');\n    } else if (newpassword !== confirmnewpassword) {\n      alert('New password and confirm new password must be same');\n    } else {\n      setLoading(true);\n      AsyncStorage.getItem('user').then(function (data) {\n        fetch('http://10.0.2.2:3000/changepassword', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": 'Bearer ' + JSON.parse(data).tokens\n          },\n          body: JSON.stringify({\n            email: JSON.parse(data).user.email,\n            oldpassword: oldpassword,\n            newpassword: newpassword\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          if (data.message == 'Password Changed Successfully') {\n            setLoading(false);\n            alert('Password Changed Successfully');\n            AsyncStorage.removeItem('user');\n            navigation.navigate('Login');\n          } else {\n            alert('Wrong Password');\n            setLoading(false);\n          }\n        });\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: containerFull,\n    children: [_jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Settings_1');\n      },\n      style: goback,\n      children: [_jsx(MaterialIcons, {\n        name: \"arrow-back-ios\",\n        size: 24,\n        color: \"gray\"\n      }), _jsx(Text, {\n        style: {\n          color: 'gray',\n          fontSize: 16\n        },\n        children: \"Go Back\"\n      })]\n    }), _jsx(Image, {\n      source: logo,\n      style: logo1\n    }), _jsx(Text, {\n      style: formHead2,\n      children: \"Choose a strong password\"\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Old password\",\n      style: formInput,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setOldpassword(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter New password\",\n      style: formInput,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setNewpassword(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Confirm New password\",\n      style: formInput,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setConfirmNewpassword(text);\n      }\n    }), _jsx(Text, {\n      style: formTextLinkRight,\n      onPress: function onPress() {\n        return navigation.navigate('ForgotPassword_EnterEmail');\n      },\n      children: \"Forgot Password?\"\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"white\"\n    }) : _jsx(Text, {\n      style: formbtn,\n      onPress: function onPress() {\n        return handlePasswordChange();\n      },\n      children: \"Next\"\n    })]\n  });\n};\nexport default ChangePassword;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","containerFull","goback","hr80","logo1","logo","formbtn","formHead","formHead2","formHead3","formInput","formTextLinkCenter","formTextLinkRight","MaterialIcons","AsyncStorage","ChangePassword","navigation","oldpassword","setOldpassword","newpassword","setNewpassword","confirmnewpassword","setConfirmNewpassword","loading","setLoading","handlePasswordChange","alert","getItem","then","data","fetch","method","headers","JSON","parse","tokens","body","stringify","email","user","res","json","message","removeItem","navigate","color","fontSize","text","styles","StyleSheet","create"],"sources":["/Users/supriyomal/Desktop/Untitled/SRC/Screens/Settings/ChangePassword.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, ActivityIndicator} from 'react-native'\nimport React, { useState } from 'react'\nimport { containerFull, goback, hr80, logo1 } from '../../CommonCss/pagecss'\nimport logo from '../../../assets/logo.png'\nimport { formbtn, formHead, formHead2, formHead3, formInput, formTextLinkCenter, formTextLinkRight } from '../../CommonCss/formcss'\nimport { MaterialIcons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst ChangePassword = ({ navigation }) => {\n\n    const [oldpassword, setOldpassword] = useState('')\n    const [newpassword, setNewpassword] = useState('')\n    const [confirmnewpassword, setConfirmNewpassword] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    const handlePasswordChange = () => {\n        if (oldpassword === '' || newpassword === '' || confirmnewpassword === '') {\n            alert('Please fill all the fields')\n        } else if (newpassword !== confirmnewpassword) {\n            alert('New password and confirm new password must be same')\n        }\n        else {\n            setLoading(true)\n            AsyncStorage.getItem('user')\n\n                .then(data => {\n                    fetch('http://10.0.2.2:3000/changepassword', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            \"Authorization\": 'Bearer ' + JSON.parse(data).tokens\n                        },\n                        body: JSON.stringify({ email: JSON.parse(data).user.email, oldpassword: oldpassword, newpassword: newpassword })\n                    })\n                        .then(res => res.json()).then(data => {\n                            if (data.message == 'Password Changed Successfully') {\n                                setLoading(false)\n                                alert('Password Changed Successfully')\n                                AsyncStorage.removeItem('user')\n                                navigation.navigate('Login')\n                            }\n                            else {\n                                alert('Wrong Password')\n                                setLoading(false)\n                            }\n                        }\n                        )\n                })\n        }\n    }\n\n    return (\n        <View style={containerFull}>\n            <TouchableOpacity onPress={() => navigation.navigate('Settings_1')} style={goback}>\n\n                <MaterialIcons name=\"arrow-back-ios\" size={24} color=\"gray\" />\n                <Text style={{\n                    color: 'gray',\n                    fontSize: 16,\n                }}\n\n                >Go Back</Text>\n\n            </TouchableOpacity>\n\n            <Image source={logo} style={logo1} />\n            <Text style={formHead2}>Choose a strong password</Text>\n            <TextInput placeholder=\"Enter Old password\" style={formInput} secureTextEntry\n                onChangeText={(text) => setOldpassword(text)}\n            />\n            <TextInput placeholder=\"Enter New password\" style={formInput} secureTextEntry\n                onChangeText={(text) => setNewpassword(text)}\n            />\n            <TextInput placeholder=\"Confirm New password\" style={formInput} secureTextEntry\n                onChangeText={(text) => setConfirmNewpassword(text)}\n            />\n            <Text style={formTextLinkRight}\n                onPress={() => navigation.navigate('ForgotPassword_EnterEmail')}\n            >Forgot Password?</Text>\n            {\n                loading ? <ActivityIndicator size=\"large\" color=\"white\" /> :\n                    <Text style={formbtn}\n                        onPress={() => handlePasswordChange()}\n                    >\n                        Next\n                    </Text>\n            }\n\n        </View>\n    )\n}\n\n\n\nexport default ChangePassword\n\nconst styles = StyleSheet.create({})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}